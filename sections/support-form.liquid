{{ 'form.css' | asset_url | stylesheet_tag }}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding color-{{ section.settings.color_scheme }}">
  <div class="page-width--form">
    {%- form 'contact', id: 'ContactForm', class: 'general-form general-form--support' -%}
      {%- if form.posted_successfully? -%}
        <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
          {% render 'icon-success' %}
          THANKS FOR CONTACTING US
        </h2>
      {%- elsif form.errors -%}
        <div class="form__message">
          <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
            {% render 'icon-error' %}
            PLEASE FILL IN THE FIELDS
          </h2>
        </div>
      {%- endif -%}

      {% for block in section.blocks %}
        {% case block.type %}
            {% when 'select' %}
              <div class="form-field {% if forloop.index0 == 0 %}form-field--small{% endif %}">
                <label class="form-field__label" for="Form-{{ section.id }}-{{ forloop.index0 }}">{{ block.settings.title }}</label>
                {% render 'icon-arrow-select' %}
                <select id="Form-{{ section.id }}-{{ forloop.index0 }}" data-level="{{ block.settings.level }}" data-name='{{ block.settings.title }}' class="form-field__input" name="contact[{{ block.settings.title | handleize | default: 'select' }}]"  id="ContactForm-instrument" >
                 
                  {% if block.settings.label-dis != blank %}
                    <option disabled selected value>{{ block.settings.label-dis }}</option>
                  {% endif %}
                  {% if block.settings.label-one != blank %}
                    <option value="{{ block.settings.label-one }}">{{ block.settings.label-one }}</option>
                  {% endif %}
                  {% if block.settings.label-two != blank %}
                    <option value="{{ block.settings.label-two }}">{{ block.settings.label-two }}</option>
                  {% endif %}
                  {% if block.settings.label-three != blank %}
                    <option value="{{ block.settings.label-three }}">{{ block.settings.label-three }}</option>
                  {% endif %}
                  {% if block.settings.label-four != blank %}
                    <option value="{{ block.settings.label-four }}">{{ block.settings.label-four }}</option>
                  {% endif %}
                  {% if block.settings.label-five != blank %}
                    <option value="{{ block.settings.label-five }}">{{ block.settings.label-five }}</option>
                  {% endif %}
                  {% if block.settings.label-six != blank %}
                    <option value="{{ block.settings.label-six }}">{{ block.settings.label-six }}</option>
                  {% endif %}
                  {% if block.settings.label-seven != blank %}
                    <option value="{{ block.settings.label-seven }}">{{ block.settings.label-seven }}</option>
                  {% endif %}
                  {% if block.settings.label-eight != blank %}
                    <option value="{{ block.settings.label-eight }}">{{ block.settings.label-eight }}</option>
                  {% endif %}
                  {% if block.settings.label-nine != blank %}
                    <option value="{{ block.settings.label-nine }}">{{ block.settings.label-nine }}</option>
                  {% endif %}
                  {% if block.settings.label-ten != blank %}
                    <option value="{{ block.settings.label-ten }}">{{ block.settings.label-ten }}</option>
                  {% endif %}
                </select>   
                <script>
                  document.addEventListener('DOMContentLoaded', function() {
                    const emailInput = document.getElementById('Form-{{ section.id }}-{{ forloop.index0 }}');
                    if(!emailInput.value) {
                      emailInput.classList.add('grey')
                    }
                    emailInput.addEventListener('change', function(e) {         
                      emailInput.classList.remove('grey')
                    });
                  }); 
                </script>  
              </div>
            {% when 'text' %}
              <div class="form-field {{ block.settings.class }}">
                <label class="form-field__label" for="ContactForm-version">{{ block.settings.title }}</label>
                <input
                  class="form-field__input"
                  type="text" 
                  id="Form-{{ section.id }}-{{ forloop.index0 }}" 
                  name="contact[{{ block.settings.title | handleize | default: 'text' }}]"
                  placeholder="{{ block.settings.placeholder }}"
                  
                >      
              </div>
              <script>
                document.addEventListener('DOMContentLoaded', function() {
                  const inputs = document.querySelector('#Form-{{ section.id }}-{{ forloop.index0 }}');
                  const emailInput = document.getElementById('Form-{{ section.id }}-{{ forloop.index0 }}');

                  inputs.addEventListener('focus', function() {
                    this.placeholder = '';
                  });
                  inputs.addEventListener('blur', function() {
                    this.placeholder = '{{ block.settings.placeholder }}';
                  });

                }); 
              </script>
            {% when 'email' %}
                <div class="form-field">
                  <label class="form-field__label" for="ContactForm-version">{{ block.settings.title }}</label>
                  {%- if form.errors contains 'email' -%}
                    <small class="contact__field-error" id="ContactForm-email-error">
                      <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
                      <span class="form__message">
                        {% comment %} {%- render 'icon-error' -%} {% endcomment %}
                        {{- form.errors.translated_fields.email | capitalize }}
                        {{ form.errors.messages.email -}}
                      </span>
                    </small>
                  {%- endif -%}
                  <input
                    class="form-field__input"
                    type="text" 
                    id="Form-{{ section.id }}-{{ forloop.index0 }}" 
                    name="contact[email]"
                    placeholder="{{ block.settings.placeholder }}"
                  >      
                </div>           
                <script>
                  document.addEventListener('DOMContentLoaded', function() {
                    const inputs = document.querySelector('#Form-{{ section.id }}-{{ forloop.index0 }}');
                    const emailInput = document.getElementById('Form-{{ section.id }}-{{ forloop.index0 }}');

                    inputs.addEventListener('focus', function() {
                      this.placeholder = '';
                    });
                    inputs.addEventListener('blur', function() {
                      this.placeholder = '{{ block.settings.placeholder }}';
                    });

                  }); 
                </script>
            {% when 'textarea' %}
                <div class="form-field form-field--textarea">
                  <label class="form-field__label" for="Form-{{ section.id }}-{{ forloop.index0 }}">{{ block.settings.title }}</label>
                  <textarea
                    id="Form-{{ section.id }}-{{ forloop.index0 }}"
                    class="form-field__input--text form-field__input"
                    name="contact[body]"
                    placeholder="{{ block.settings.placeholder }}"          
                  ></textarea> 
                </div>
        {% endcase %}
      {% endfor %}
      <button type="submit" class="button button--submit">
        SUBMIT
        {% render 'icon-arrow' %}
      </button>
    {%- endform -%}
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    var formFields = document.querySelectorAll('.form-field');
    var formFieldsVis = document.querySelectorAll('.form-field--vis');
    var button = document.querySelector('.button--submit');
    var textarea = document.querySelector('.form-field--textarea');
    button.style.display = 'none';
    textarea.style.display = 'none';

    for (var i = 4; i < formFields.length; i++) {
      formFields[i].style.display = 'none';
    }
  
    function hideInputs() {
      for (var i = 0; i < formFieldsVis.length; i++) {
        formFieldsVis[i].style.display = 'none';
      }
    }
function checkInputs() {
      var inputs = document.querySelectorAll('.form-field__input');
      var allFieldsFilled = true;
      for (var i = 0; i < inputs.length; i++) {
        if (inputs[i].value === '' && inputs[i].style.display !== 'none') {
          allFieldsFilled = false;
          break;
        }
      }
  
      if (allFieldsFilled) {
        button.style.display = 'flex';
        textarea.style.display = 'block';
      } else {
        button.style.display = 'none';
        textarea.style.display = 'none';
      }
    }
  
    var selects = document.querySelectorAll('.form-field__input[data-level="level"]');
    var selects1 = document.querySelectorAll('.form-field__input[data-level="level1"]');
    var selects2 = document.querySelectorAll('.form-field__input[data-level="level2"]');
  
   {% comment %} for (var i = 0; i < selects.length; i++) {
      selects[i].addEventListener('change', function() {
        var currentField = this.parentElement;
        var nextField = currentField.nextElementSibling;
        console.log(nextField.querySelector('.form-field__input'))
        console.log(this.value)
        console.log(nextField.querySelector('.form-field__input').getAttribute('data-name'))
        if (nextField && nextField.classList.contains('form-field') && this.value == nextField.querySelector('.form-field__input').getAttribute('data-name')) {
          nextField.style.display = 'block';
        }
        checkInputs();
      }); 
    } {% endcomment %}
      for (var i = 0; i < selects.length; i++) {
        selects[i].addEventListener('change', function() {
          var dataName = this.value; 
          var targetField = document.querySelector('.form-field__input[data-name="' + dataName + '"]');
          if (targetField) {
            targetField.parentElement.style.display = 'block';
            targetField.value = targetField.options[0].value;
          } else {
            button.style.display = 'flex';
            textarea.style.display = 'block';
          }
          var otherFields = document.querySelectorAll('.form-field__input[data-name]:not([data-name="' + dataName + '"])');
          for (var j = 0; j < otherFields.length; j++) {
            if (  j > 1 ) {
              otherFields[j].parentElement.style.display = 'none';
            }
          }
          {% comment %} checkInputs(); {% endcomment %}
        });
      selects[i].addEventListener('input', checkInputs);
      selects[i].addEventListener('input', hideInputs);
    }


      for (var i = 0; i < selects1.length; i++) {
        selects1[i].addEventListener('change', function() {
          var dataName = this.value; 
          var targetField = document.querySelector('.form-field__input[data-name="' + dataName + '"]');
          if (targetField) {
            targetField.parentElement.style.display = 'block';
            targetField.value = targetField.options[0].value;
          } else {
            if(this.getAttribute("data-name").toLowerCase().includes("ableton")  ) {
              for (var i = 0; i < formFieldsVis.length; i++) {
                formFieldsVis[i].style.display = 'block';
              }
            }
           
            button.style.display = 'flex';
            textarea.style.display = 'block';
          }
          var otherFields = document.querySelectorAll('.form-field__input[data-name]:not([data-name="' + dataName + '"])');
          for (var j = 0; j < otherFields.length; j++) {        
            if (  j > 4 ) {
              otherFields[j].parentElement.style.display = 'none';
            }
          }
          for (var i = 0; i < selects.length; i++) {
            if(selects[i] == 1) {
              selects[i].style.display = 'block';
            }
          }
        });
      selects1[i].addEventListener('input', checkInputs);
      
    }


      for (var i = 0; i < selects2.length; i++) {
        selects2[i].addEventListener('change', function() {
          var dataName = this.value; 
          var targetField = document.querySelector('.form-field__input[data-name="' + dataName + '"]');
          if (targetField) {
            targetField.parentElement.style.display = 'block';
            targetField.value = targetField.options[0].value;
          } else {
            if(this.getAttribute("data-name").toLowerCase().includes("ableton") || this.getAttribute("data-name").toLowerCase().includes("generator") || this.getAttribute("data-name").toLowerCase().includes("dynamic") ) {
              for (var i = 0; i < formFieldsVis.length; i++) {
                formFieldsVis[i].style.display = 'block';
              }
            }
            button.style.display = 'flex';
            textarea.style.display = 'block';
          }
          var otherFields = document.querySelectorAll('.form-field__input[data-name]:not([data-name="' + dataName + '"])');
          for (var j = 0; j < otherFields.length; j++) {        
            {% comment %} if (  j > 6 ) {
              otherFields[j].parentElement.style.display = 'none';
            } {% endcomment %}
          }

          {% comment %} checkInputs(); {% endcomment %}
        });
      selects2[i].addEventListener('input', checkInputs);
    }
  });
  
</script>
{% schema %}
  {
  "name": "Support Form",
  "class": "general-form",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    }
  ],
  "blocks": [
    {
      "type": "email",
      "name": "Email",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Email"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Your Email"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text line",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Full Name",
          "info": "Example: Full Name"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Full Name",
          "info": "Example: Full Name"
        },
        {
          "type": "text",
          "id": "class",
          "label": "Additional Class",
          "default": "form-field--vis"
        }
      ]
    },
    {
      "type": "textarea",
      "name": "Text area",
      "settings": [
        {
          "type": "textarea",
          "id": "title",
          "label": "Label",
          "default": "message",
          "info": "Example: message"
        },
        {
          "type": "textarea",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Some text here",
          "info": "Example: Some text here"
        }
      ]
    },
    {
      "type": "select",
      "name": "Select dropdown",
      "settings": [
        
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "info": "Example: Product"
        },
        {
          "type": "text",
          "id": "level",
          "label": "level"
        },
       
        {
          "type": "header",
          "content": "Include up to seven options",
          "info":  "Options with blank text will not appear."
        },
        {
          "type": "text",
          "id": "label-dis",
          "label": "Option placeholder"
        },
        {
          "type": "text",
          "id": "label-one",
          "label": "Option one"
        },
        {
          "type": "text",
          "id": "label-two",
          "label": "Option two"
        },
        {
          "type": "text",
          "id": "label-three",
          "label": "Option three"
        },
        {
          "type": "text",
          "id": "label-four",
          "label": "Option four"
        },
        {
          "type": "text",
          "id": "label-five",
          "label": "Option five"
        },
        {
          "type": "text",
          "id": "label-six",
          "label": "Option six"
        },
        {
          "type": "text",
          "id": "label-seven",
          "label": "Option seven"
        },
        {
          "type": "text",
          "id": "label-eight",
          "label": "Option eight"
        },
        {
          "type": "text",
          "id": "label-nine",
          "label": "Option nine"
        },
        {
          "type": "text",
          "id": "label-ten",
          "label": "Option ten"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Support Form"
    }
  ]
}  
{% endschema %}